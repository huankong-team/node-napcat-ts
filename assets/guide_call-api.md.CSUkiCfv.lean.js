import{_ as a,c as i,a2 as t,o as e}from"./chunks/framework.D6PIRKQ_.js";const o=JSON.parse('{"title":"调用接口","description":"","frontmatter":{},"headers":[],"relativePath":"guide/call-api.md","filePath":"guide/call-api.md","lastUpdated":null}'),p={name:"guide/call-api.md"};function n(l,s,h,r,k,d){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="调用接口" tabindex="-1">调用接口 <a class="header-anchor" href="#调用接口" aria-label="Permalink to &quot;调用接口&quot;">​</a></h1><p>我们连接好了 <code>NapcatQQ</code> 是时候该 <s>调教</s> 一下她了</p><p>大部分接口都可以直接在 <code>实例化对象</code> 上直接调用, 比如 发送信息 <code>send_msg</code></p><p>此处的 <code>Structs</code> 在 <a href="./struct-maker">下一篇-结构体构造器</a> 中有介绍</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Structs } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node-napcat-ts&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> napcat.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send_msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  user_id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  message: [Structs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;你好呀~&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="接口大全" tabindex="-1">接口大全 <a class="header-anchor" href="#接口大全" aria-label="Permalink to &quot;接口大全&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">注意</p><p>如有缺少或类型错误请提交 <a href="https://github.com/HkTeamX/node-napcat-ts/compare" target="_blank" rel="noreferrer">pr</a></p></div><p>以 <a href="https://napneko.github.io/develop/api" target="_blank" rel="noreferrer">NapCatQQ 文档</a> 为准</p>`,8)]))}const E=a(p,[["render",n]]);export{o as __pageData,E as default};
